{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useSSE.ts\nimport { useEffect, useState } from \"react\";\nexport function useSSE(eventName, options) {\n  _s();\n  const [state, setState] = useState({\n    data: null,\n    error: null,\n    status: \"idle\"\n  });\n  useEffect(() => {\n    if (options.disabled || !options.path) {\n      setState(prev => ({\n        ...prev,\n        status: \"idle\"\n      }));\n      return;\n    }\n    setState(prev => ({\n      ...prev,\n      status: \"connecting\"\n    }));\n    const eventSource = new EventSource(options.path);\n    eventSource.onopen = () => {\n      setState(prev => ({\n        ...prev,\n        status: \"active\"\n      }));\n    };\n    const handleMessage = event => {\n      try {\n        const parsedData = JSON.parse(event.data);\n        setState({\n          data: parsedData,\n          error: null,\n          status: \"active\"\n        });\n      } catch (err) {\n        setState({\n          data: null,\n          error: err instanceof Error ? err : new Error(\"SSE data parse error\"),\n          status: \"error\"\n        });\n      }\n    };\n    console.log(eventName);\n    eventSource.addEventListener(eventName, handleMessage);\n    eventSource.onerror = () => {\n      setState({\n        data: null,\n        error: new Error(\"SSE connection error\"),\n        status: \"error\"\n      });\n      eventSource.close();\n    };\n    return () => {\n      eventSource.removeEventListener(eventName, handleMessage);\n      eventSource.close();\n      setState(prev => ({\n        ...prev,\n        status: \"idle\"\n      }));\n    };\n  }, [eventName, options.path, options.disabled]);\n  return state;\n}\n_s(useSSE, \"dV0nJ/RG5ELcDFVaPU2quSovFwQ=\");","map":{"version":3,"names":["useEffect","useState","useSSE","eventName","options","_s","state","setState","data","error","status","disabled","path","prev","eventSource","EventSource","onopen","handleMessage","event","parsedData","JSON","parse","err","Error","console","log","addEventListener","onerror","close","removeEventListener"],"sources":["/Users/hayden/Documents/react/sse-demo/src/hooks/useSSE.tsx"],"sourcesContent":["// src/hooks/useSSE.ts\nimport { useEffect, useState } from \"react\";\n\ninterface SSEOptions<T> {\n  path: string | null;\n  disabled?: boolean;\n}\n\ninterface SSEState<T> {\n  data: T | null;\n  error: Error | null;\n  status: \"idle\" | \"connecting\" | \"active\" | \"error\";\n}\n\nexport function useSSE<T>(\n  eventName: string,\n  options: SSEOptions<T>\n): SSEState<T> {\n  const [state, setState] = useState<SSEState<T>>({\n    data: null,\n    error: null,\n    status: \"idle\",\n  });\n\n  useEffect(() => {\n    if (options.disabled || !options.path) {\n      setState((prev) => ({ ...prev, status: \"idle\" }));\n      return;\n    }\n\n    setState((prev) => ({ ...prev, status: \"connecting\" }));\n\n    const eventSource = new EventSource(options.path);\n\n    eventSource.onopen = () => {\n      setState((prev) => ({ ...prev, status: \"active\" }));\n    };\n\n    const handleMessage = (event: MessageEvent) => {\n      try {\n        const parsedData = JSON.parse(event.data) as T;\n        setState({\n          data: parsedData,\n          error: null,\n          status: \"active\",\n        });\n      } catch (err) {\n        setState({\n          data: null,\n          error: err instanceof Error ? err : new Error(\"SSE data parse error\"),\n          status: \"error\",\n        });\n      }\n    };\n\n    console.log(eventName);\n\n    eventSource.addEventListener(eventName, handleMessage);\n\n    eventSource.onerror = () => {\n      setState({\n        data: null,\n        error: new Error(\"SSE connection error\"),\n        status: \"error\",\n      });\n      eventSource.close();\n    };\n\n    return () => {\n      eventSource.removeEventListener(eventName, handleMessage);\n      eventSource.close();\n      setState((prev) => ({ ...prev, status: \"idle\" }));\n    };\n  }, [eventName, options.path, options.disabled]);\n\n  return state;\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAa3C,OAAO,SAASC,MAAMA,CACpBC,SAAiB,EACjBC,OAAsB,EACT;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAc;IAC9CO,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACd,IAAII,OAAO,CAACO,QAAQ,IAAI,CAACP,OAAO,CAACQ,IAAI,EAAE;MACrCL,QAAQ,CAAEM,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEH,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;MACjD;IACF;IAEAH,QAAQ,CAAEM,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEH,MAAM,EAAE;IAAa,CAAC,CAAC,CAAC;IAEvD,MAAMI,WAAW,GAAG,IAAIC,WAAW,CAACX,OAAO,CAACQ,IAAI,CAAC;IAEjDE,WAAW,CAACE,MAAM,GAAG,MAAM;MACzBT,QAAQ,CAAEM,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEH,MAAM,EAAE;MAAS,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,MAAMO,aAAa,GAAIC,KAAmB,IAAK;MAC7C,IAAI;QACF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACV,IAAI,CAAM;QAC9CD,QAAQ,CAAC;UACPC,IAAI,EAAEW,UAAU;UAChBV,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZf,QAAQ,CAAC;UACPC,IAAI,EAAE,IAAI;UACVC,KAAK,EAAEa,GAAG,YAAYC,KAAK,GAAGD,GAAG,GAAG,IAAIC,KAAK,CAAC,sBAAsB,CAAC;UACrEb,MAAM,EAAE;QACV,CAAC,CAAC;MACJ;IACF,CAAC;IAEDc,OAAO,CAACC,GAAG,CAACtB,SAAS,CAAC;IAEtBW,WAAW,CAACY,gBAAgB,CAACvB,SAAS,EAAEc,aAAa,CAAC;IAEtDH,WAAW,CAACa,OAAO,GAAG,MAAM;MAC1BpB,QAAQ,CAAC;QACPC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAIc,KAAK,CAAC,sBAAsB,CAAC;QACxCb,MAAM,EAAE;MACV,CAAC,CAAC;MACFI,WAAW,CAACc,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,OAAO,MAAM;MACXd,WAAW,CAACe,mBAAmB,CAAC1B,SAAS,EAAEc,aAAa,CAAC;MACzDH,WAAW,CAACc,KAAK,CAAC,CAAC;MACnBrB,QAAQ,CAAEM,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEH,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,CAACP,SAAS,EAAEC,OAAO,CAACQ,IAAI,EAAER,OAAO,CAACO,QAAQ,CAAC,CAAC;EAE/C,OAAOL,KAAK;AACd;AAACD,EAAA,CA9DeH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}