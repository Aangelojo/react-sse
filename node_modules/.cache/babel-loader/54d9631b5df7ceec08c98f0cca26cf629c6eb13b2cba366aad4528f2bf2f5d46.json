{"ast":null,"code":"var _jsxFileName = \"/Users/hayden/Documents/react/sse-demo/src/components/SSEProgress.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSSE } from \"../hooks/useSSE\";\nimport \"./SSEProgress.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SSEProgress({\n  endpoint,\n  eventName = \"progress\",\n  onComplete,\n  onError\n}) {\n  _s();\n  const [taskId, setTaskId] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(\"等待启动\");\n\n  // 使用 useSSE Hook\n  const {\n    data,\n    error,\n    status\n  } = useSSE(eventName, {\n    path: taskId ? `${endpoint}task-progress?task_id=${taskId}` : null,\n    disabled: !taskId\n  });\n\n  // 启动任务\n  const startTask = async () => {\n    try {\n      const response = await fetch(endpoint + \"create-task\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`请求失败: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(result);\n      setTaskId(result.data.id);\n      setProgress(0);\n      setStatusMessage(\"任务已启动...\");\n    } catch (err) {\n      console.error(\"启动任务失败:\", err);\n      setStatusMessage(\"启动失败\");\n      if (onError) {\n        onError(err instanceof Error ? err : new Error(\"启动任务失败\"));\n      }\n    }\n  };\n\n  // 处理 SSE 数据更新\n  useEffect(() => {\n    console.log(1111111);\n    if (data) {\n      console.log(data);\n      setProgress(data.progress);\n      if (data.message) {\n        setStatusMessage(data.message);\n      }\n      if (data.status === \"completed\" && onComplete) {\n        onComplete();\n      }\n    }\n  }, [data, onComplete]);\n\n  // 处理错误\n  useEffect(() => {\n    if (error) {\n      console.error(\"SSE 错误:\", error);\n      setStatusMessage(\"连接错误\");\n      if (onError) {\n        onError(error);\n      }\n    }\n  }, [error, onError]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prev => prev < 100 ? prev + 10 : 100);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // 根据状态获取进度条颜色\n  const getProgressBarColor = () => {\n    if (error || (data === null || data === void 0 ? void 0 : data.status) === \"failed\") return \"#ff4444\";\n    if ((data === null || data === void 0 ? void 0 : data.status) === \"completed\") return \"#00C851\";\n    return \"#33b5e5\";\n  };\n\n  // 根据状态获取状态文本\n  const getStatusText = () => {\n    if (error) return \"错误\";\n    if (!taskId) return \"等待启动\";\n    if ((data === null || data === void 0 ? void 0 : data.status) === \"completed\") return \"已完成\";\n    if ((data === null || data === void 0 ? void 0 : data.status) === \"failed\") return \"失败\";\n    return status === \"active\" ? \"进行中\" : \"连接中...\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sse-progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTask,\n      disabled: !!taskId && status !== \"error\",\n      className: \"sse-start-button\",\n      children: taskId ? status === \"error\" ? \"重新连接\" : \"任务进行中...\" : \"启动任务\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sse-progress-track\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sse-progress-bar\",\n        style: {\n          width: `${progress}%`,\n          backgroundColor: getProgressBarColor()\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sse-progress-text\",\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sse-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sse-status-text\",\n        children: getStatusText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sse-status-message\",\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sse-error\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u9519\\u8BEF: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(SSEProgress, \"vNCQRbDO79ryBcP1Ns/miOVkDpM=\", false, function () {\n  return [useSSE];\n});\n_c = SSEProgress;\nvar _c;\n$RefreshReg$(_c, \"SSEProgress\");","map":{"version":3,"names":["useState","useEffect","useSSE","jsxDEV","_jsxDEV","SSEProgress","endpoint","eventName","onComplete","onError","_s","taskId","setTaskId","progress","setProgress","statusMessage","setStatusMessage","data","error","status","path","disabled","startTask","response","fetch","method","headers","ok","Error","result","json","console","log","id","err","message","timer","setInterval","prev","clearInterval","getProgressBarColor","getStatusText","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/hayden/Documents/react/sse-demo/src/components/SSEProgress.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSSE } from \"../hooks/useSSE\";\nimport \"./SSEProgress.css\";\n\ninterface TaskProgressData {\n  progress: number;\n  status?: \"processing\" | \"completed\" | \"failed\";\n  message?: string;\n}\n\ninterface SSEProgressProps {\n  endpoint: string;\n  eventName?: string;\n  onComplete?: () => void;\n  onError?: (error: Error) => void;\n}\n\nexport function SSEProgress({\n  endpoint,\n  eventName = \"progress\",\n  onComplete,\n  onError,\n}: SSEProgressProps) {\n  const [taskId, setTaskId] = useState<string | null>(null);\n  const [progress, setProgress] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(\"等待启动\");\n\n  // 使用 useSSE Hook\n  const { data, error, status } = useSSE<TaskProgressData>(eventName, {\n    path: taskId ? `${endpoint}task-progress?task_id=${taskId}` : null,\n    disabled: !taskId,\n  });\n\n  // 启动任务\n  const startTask = async () => {\n    try {\n      const response = await fetch(endpoint + \"create-task\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      if (!response.ok) {\n        throw new Error(`请求失败: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log(result);\n      setTaskId(result.data.id);\n      setProgress(0);\n      setStatusMessage(\"任务已启动...\");\n    } catch (err) {\n      console.error(\"启动任务失败:\", err);\n      setStatusMessage(\"启动失败\");\n      if (onError) {\n        onError(err instanceof Error ? err : new Error(\"启动任务失败\"));\n      }\n    }\n  };\n\n  // 处理 SSE 数据更新\n  useEffect(() => {\n    console.log(1111111);\n    if (data) {\n      console.log(data);\n      setProgress(data.progress);\n\n      if (data.message) {\n        setStatusMessage(data.message);\n      }\n\n      if (data.status === \"completed\" && onComplete) {\n        onComplete();\n      }\n    }\n  }, [data, onComplete]);\n\n  // 处理错误\n  useEffect(() => {\n    if (error) {\n      console.error(\"SSE 错误:\", error);\n      setStatusMessage(\"连接错误\");\n      if (onError) {\n        onError(error);\n      }\n    }\n  }, [error, onError]);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prev) => (prev < 100 ? prev + 10 : 100));\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // 根据状态获取进度条颜色\n  const getProgressBarColor = () => {\n    if (error || data?.status === \"failed\") return \"#ff4444\";\n    if (data?.status === \"completed\") return \"#00C851\";\n    return \"#33b5e5\";\n  };\n\n  // 根据状态获取状态文本\n  const getStatusText = () => {\n    if (error) return \"错误\";\n    if (!taskId) return \"等待启动\";\n    if (data?.status === \"completed\") return \"已完成\";\n    if (data?.status === \"failed\") return \"失败\";\n    return status === \"active\" ? \"进行中\" : \"连接中...\";\n  };\n\n  return (\n    <div className=\"sse-progress-container\">\n      <button\n        onClick={startTask}\n        disabled={!!taskId && status !== \"error\"}\n        className=\"sse-start-button\"\n      >\n        {taskId\n          ? status === \"error\"\n            ? \"重新连接\"\n            : \"任务进行中...\"\n          : \"启动任务\"}\n      </button>\n\n      <div className=\"sse-progress-track\">\n        <div\n          className=\"sse-progress-bar\"\n          style={{\n            width: `${progress}%`,\n            backgroundColor: getProgressBarColor(),\n          }}\n        >\n          <span className=\"sse-progress-text\">{progress}%</span>\n        </div>\n      </div>\n\n      <div className=\"sse-status\">\n        <span className=\"sse-status-text\">{getStatusText()}</span>\n        {statusMessage && (\n          <span className=\"sse-status-message\">{statusMessage}</span>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"sse-error\">\n          <span>错误: {error.message}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}